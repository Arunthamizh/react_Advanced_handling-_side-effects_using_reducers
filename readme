// Effects, Reducers and context
// 1.Working with side Effects (Effects)
// 2.Managing more complex state with Reducers
// 3. Managing App-Wide or Component-Wide sate with context.

// ! useState 
//  It the main state management tool in React 
//  Its great for simple state management and independent pieces of state/data
// It great if state updates are easy to handle and limited to few kinds of updates

// !  useReducer
// If state updates are more complex useReducer is better than useState
// Like objects as state and arrays as state or more complex state
// useReducer is alternative to useEffect to overcome the limitation of useEffect
// It has reducers and actions
// It has reducer function (contain complex state update logic)
// It provide latest state snapshot
